// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	model "github.com/lyn0904/spine-go/model"
	mock "github.com/stretchr/testify/mock"
)

// SmartEnergyManagementPsCommonInterface is an autogenerated mock type for the SmartEnergyManagementPsCommonInterface type
type SmartEnergyManagementPsCommonInterface struct {
	mock.Mock
}

type SmartEnergyManagementPsCommonInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *SmartEnergyManagementPsCommonInterface) EXPECT() *SmartEnergyManagementPsCommonInterface_Expecter {
	return &SmartEnergyManagementPsCommonInterface_Expecter{mock: &_m.Mock}
}

// GetData provides a mock function with given fields:
func (_m *SmartEnergyManagementPsCommonInterface) GetData() (*model.SmartEnergyManagementPsDataType, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetData")
	}

	var r0 *model.SmartEnergyManagementPsDataType
	var r1 error
	if rf, ok := ret.Get(0).(func() (*model.SmartEnergyManagementPsDataType, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *model.SmartEnergyManagementPsDataType); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.SmartEnergyManagementPsDataType)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SmartEnergyManagementPsCommonInterface_GetData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetData'
type SmartEnergyManagementPsCommonInterface_GetData_Call struct {
	*mock.Call
}

// GetData is a helper method to define mock.On call
func (_e *SmartEnergyManagementPsCommonInterface_Expecter) GetData() *SmartEnergyManagementPsCommonInterface_GetData_Call {
	return &SmartEnergyManagementPsCommonInterface_GetData_Call{Call: _e.mock.On("GetData")}
}

func (_c *SmartEnergyManagementPsCommonInterface_GetData_Call) Run(run func()) *SmartEnergyManagementPsCommonInterface_GetData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SmartEnergyManagementPsCommonInterface_GetData_Call) Return(_a0 *model.SmartEnergyManagementPsDataType, _a1 error) *SmartEnergyManagementPsCommonInterface_GetData_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *SmartEnergyManagementPsCommonInterface_GetData_Call) RunAndReturn(run func() (*model.SmartEnergyManagementPsDataType, error)) *SmartEnergyManagementPsCommonInterface_GetData_Call {
	_c.Call.Return(run)
	return _c
}

// NewSmartEnergyManagementPsCommonInterface creates a new instance of SmartEnergyManagementPsCommonInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSmartEnergyManagementPsCommonInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *SmartEnergyManagementPsCommonInterface {
	mock := &SmartEnergyManagementPsCommonInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
