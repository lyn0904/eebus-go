// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	model "github.com/lyn0904/spine-go/model"
	mock "github.com/stretchr/testify/mock"
)

// DeviceDiagnosisServerInterface is an autogenerated mock type for the DeviceDiagnosisServerInterface type
type DeviceDiagnosisServerInterface struct {
	mock.Mock
}

type DeviceDiagnosisServerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *DeviceDiagnosisServerInterface) EXPECT() *DeviceDiagnosisServerInterface_Expecter {
	return &DeviceDiagnosisServerInterface_Expecter{mock: &_m.Mock}
}

// SetLocalOperatingState provides a mock function with given fields: operatingState
func (_m *DeviceDiagnosisServerInterface) SetLocalOperatingState(operatingState model.DeviceDiagnosisOperatingStateType) {
	_m.Called(operatingState)
}

// DeviceDiagnosisServerInterface_SetLocalOperatingState_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetLocalOperatingState'
type DeviceDiagnosisServerInterface_SetLocalOperatingState_Call struct {
	*mock.Call
}

// SetLocalOperatingState is a helper method to define mock.On call
//   - operatingState model.DeviceDiagnosisOperatingStateType
func (_e *DeviceDiagnosisServerInterface_Expecter) SetLocalOperatingState(operatingState interface{}) *DeviceDiagnosisServerInterface_SetLocalOperatingState_Call {
	return &DeviceDiagnosisServerInterface_SetLocalOperatingState_Call{Call: _e.mock.On("SetLocalOperatingState", operatingState)}
}

func (_c *DeviceDiagnosisServerInterface_SetLocalOperatingState_Call) Run(run func(operatingState model.DeviceDiagnosisOperatingStateType)) *DeviceDiagnosisServerInterface_SetLocalOperatingState_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(model.DeviceDiagnosisOperatingStateType))
	})
	return _c
}

func (_c *DeviceDiagnosisServerInterface_SetLocalOperatingState_Call) Return() *DeviceDiagnosisServerInterface_SetLocalOperatingState_Call {
	_c.Call.Return()
	return _c
}

func (_c *DeviceDiagnosisServerInterface_SetLocalOperatingState_Call) RunAndReturn(run func(model.DeviceDiagnosisOperatingStateType)) *DeviceDiagnosisServerInterface_SetLocalOperatingState_Call {
	_c.Call.Return(run)
	return _c
}

// SetLocalState provides a mock function with given fields: statetate
func (_m *DeviceDiagnosisServerInterface) SetLocalState(statetate *model.DeviceDiagnosisStateDataType) {
	_m.Called(statetate)
}

// DeviceDiagnosisServerInterface_SetLocalState_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetLocalState'
type DeviceDiagnosisServerInterface_SetLocalState_Call struct {
	*mock.Call
}

// SetLocalState is a helper method to define mock.On call
//   - statetate *model.DeviceDiagnosisStateDataType
func (_e *DeviceDiagnosisServerInterface_Expecter) SetLocalState(statetate interface{}) *DeviceDiagnosisServerInterface_SetLocalState_Call {
	return &DeviceDiagnosisServerInterface_SetLocalState_Call{Call: _e.mock.On("SetLocalState", statetate)}
}

func (_c *DeviceDiagnosisServerInterface_SetLocalState_Call) Run(run func(statetate *model.DeviceDiagnosisStateDataType)) *DeviceDiagnosisServerInterface_SetLocalState_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*model.DeviceDiagnosisStateDataType))
	})
	return _c
}

func (_c *DeviceDiagnosisServerInterface_SetLocalState_Call) Return() *DeviceDiagnosisServerInterface_SetLocalState_Call {
	_c.Call.Return()
	return _c
}

func (_c *DeviceDiagnosisServerInterface_SetLocalState_Call) RunAndReturn(run func(*model.DeviceDiagnosisStateDataType)) *DeviceDiagnosisServerInterface_SetLocalState_Call {
	_c.Call.Return(run)
	return _c
}

// NewDeviceDiagnosisServerInterface creates a new instance of DeviceDiagnosisServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDeviceDiagnosisServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *DeviceDiagnosisServerInterface {
	mock := &DeviceDiagnosisServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
