// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	model "github.com/lyn0904/spine-go/model"
	mock "github.com/stretchr/testify/mock"
)

// IdentificationClientInterface is an autogenerated mock type for the IdentificationClientInterface type
type IdentificationClientInterface struct {
	mock.Mock
}

type IdentificationClientInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *IdentificationClientInterface) EXPECT() *IdentificationClientInterface_Expecter {
	return &IdentificationClientInterface_Expecter{mock: &_m.Mock}
}

// RequestValues provides a mock function with given fields:
func (_m *IdentificationClientInterface) RequestValues() (*model.MsgCounterType, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RequestValues")
	}

	var r0 *model.MsgCounterType
	var r1 error
	if rf, ok := ret.Get(0).(func() (*model.MsgCounterType, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *model.MsgCounterType); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.MsgCounterType)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IdentificationClientInterface_RequestValues_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestValues'
type IdentificationClientInterface_RequestValues_Call struct {
	*mock.Call
}

// RequestValues is a helper method to define mock.On call
func (_e *IdentificationClientInterface_Expecter) RequestValues() *IdentificationClientInterface_RequestValues_Call {
	return &IdentificationClientInterface_RequestValues_Call{Call: _e.mock.On("RequestValues")}
}

func (_c *IdentificationClientInterface_RequestValues_Call) Run(run func()) *IdentificationClientInterface_RequestValues_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *IdentificationClientInterface_RequestValues_Call) Return(_a0 *model.MsgCounterType, _a1 error) *IdentificationClientInterface_RequestValues_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *IdentificationClientInterface_RequestValues_Call) RunAndReturn(run func() (*model.MsgCounterType, error)) *IdentificationClientInterface_RequestValues_Call {
	_c.Call.Return(run)
	return _c
}

// NewIdentificationClientInterface creates a new instance of IdentificationClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIdentificationClientInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *IdentificationClientInterface {
	mock := &IdentificationClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
